[
  {
    "path": "posts/2021-08-16-tidyverse-cleaning/",
    "title": "Tidyverse Cleaning",
    "description": "A few helpful functions from the Tidyverse",
    "author": [
      {
        "name": "Allie Cole",
        "url": {}
      }
    ],
    "date": "2021-08-16",
    "categories": [],
    "contents": "\nPractice some tidyverse functions for data wrangling using palmerpenguins as an example\nfilter()\nselect()\nmutate()\ncase_when()\ngroup_by() %>% summarize()\npiping in sequence\ndplyer::filter() to keep ot exclue rows based on conditions\nExact match (single condition)\nkeep only observations where the island is Biscoe\n\n\nex_1 <- filter(.data = penguins,\n               island == \"Biscoe\")\nunique(ex_1$island) #to check and make sure it worked\n\n\n[1] Biscoe\nLevels: Biscoe Dream Torgersen\n\nand statement within filter()\nonly keep observations if the penguins are chinstrap and the year is 2008\n\n\nex_2 <- penguins %>% \n  filter(species == \"Chinstrap\",\n           year == 2008) # coudl also use & instead of , or filter each seperate\n\n\n\nExclude Gentoos\nkeep observations if teh penguin species are NOT gentoo\n\n\nex_3 <- penguins %>% \n  filter(species != \"Gentoo\")\n\n\n\nPractice: - Create a subset from penguins that only caintains adlieie with a flipper length greater than or equal to 185mm\n\n\nprac_1 <- penguins %>%  \n  filter(species == \"Adelie\", flipper_length_mm >= 185)\n\n\n\nUsing teh %in% operator\nto look for any matches within a vector, and return true if teh value does exist for our row\nwe want to keep observations where the island is dream or torgerson\n\n\nex_4 <- penguins %>% \n  filter(island %in% c(\"Dream\", \"Torgersen\")) # add a ! before island to get anything not in this vector \n\n\n\nSelect() to select or exclude columns\nKeep a single column by name\nOnly want to keep teh species column\n\n\nex_5 <- penguins %>% \n  select(species) %>% \n  pull(species) #now its all the values in a vector not a df \n\n#reminder... rewrite without teh pipe \n\nex_5 <- select(.data = penguins, species)\n\n\n\nKeep multiple columns by name\nCreate a subset that contains species, bill length, through flipper length and year\n\n\nex_6 <- penguins %>% \n  select(species, bill_length_mm:flipper_length_mm, year)\n\n\n\nChose or exclude columns based on position\n\n\nex_7 <- penguins %>%  \n  select(-4)\n\n\n\nA piped sequence\nWrite a piped sequence where you first only keep columns for species body mass and island and second filter to only include observations if body mass if greater than 3600\n\n\nex_8 <- penguins %>% \n  select(species, body_mass_g, island) %>% \n  filter(body_mass_g >= 3600)\n\n\n\nmutate() add or update existing columns while keeping the ones already there\nAdd a column that has body mass converted to kg\n\n\nex_9 <- penguins %>% \n  mutate(body_mass_kg = body_mass_g / 1000) #can add more statements on if you want \n\n\n\nmutate() to update an existing column\n\n\nex_10 <- penguins %>% \n  mutate(island_hooray = str_replace(island, pattern = \"sen\", replacement = \"HOORAY!!\")) #o this is great for fixing spelling mistakes \n\n\n\nUpdate the class of the bill_depth_mm column to character\n\n\nex_11 <- penguins %>% \n  mutate(bill_depth_mm = as.character(bill_depth_mm))\n\nclass(ex_11$bill_depth_mm) #testing\n\n\n[1] \"character\"\n\ncase_when(): your favorite if-else\nCreate a new column that contains small if penguin flipper length is less than 185, medium if otherwise\n\n\nex_12 <- penguins %>% \n  mutate(binned_size = case_when(\n    flipper_length_mm < 185 ~ \"small\", \n    flipper_length_mm >= 185 ~ \"medium\"\n  ))\n\n\n\nPractice: starting fro penguins create a new column called bird_bill_bin that contains - bill length is less than 38mm then “short bill” - if >= to 38mm & < 43mm “meduim bill” - if >= 43 then is \"long bill\n\n\nprac_2 <- penguins %>% \n  mutate(bird_bill_bin = case_when(\n    bill_length_mm < 38 ~ \"small bill\", \n    bill_length_mm >= 38 & bill_length_mm < 43 ~ \"medium bill\", \n    bill_length_mm > 43 ~ \"long bill\"\n  ))\n\n\n\ngroup_by () %>% summarize() to find summary values by group and retunr tehm in a nice summary table\nFind the mean of the bill_depth_mm column by species\n\n\nmean(penguins$bill_depth_mm, na.rm = TRUE)\n\n\n[1] 17.15117\n\nex_13 <- penguins %>%  \n  group_by(species, island) %>% #can add as many of the grouping variables as you want\n  summarize(mean_flipper_length = mean(bill_depth_mm, na.rm = TRUE), \n            sd_flipper_length = sd(bill_depth_mm, na.rm = TRUE))\n\n\n\nPractice\nIn a single pipe sequence\nKeep penguins with a body mass greater than 33500 grams\nOnly keep columns for species, flipper length and sex\nCreate a summary table that contains teh mean , sd, max and min value of flipper length by species and sex\n\n\nprac_3 <- penguins %>% \n  filter(body_mass_g > 3500) %>%\n  select(species, flipper_length_mm, sex) %>% \n  group_by(species, sex) %>% \n  summarize(mean_flipper_length = mean(flipper_length_mm, na.rm = TRUE), \n            sd_flipper_length = sd(flipper_length_mm, na.rm = TRUE), \n            max_flipper_length = max(flipper_length_mm, na.rm = TRUE), \n            min_flipper_length = min(flipper_length_mm, na.rm = TRUE))\n\n\n\n\n\n\n",
    "preview": {},
    "last_modified": "2021-08-16T16:36:49-07:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-08-13-functions/",
    "title": "Functions",
    "description": "A short description of the post.",
    "author": [
      {
        "name": "Allie Cole",
        "url": {}
      }
    ],
    "date": "2021-08-13",
    "categories": [],
    "contents": "\nHere are some functions I learned!\n\n\n\nDistill is a publication format for scientific and technical writing, native to the web.\nLearn more about using Distill at https://rstudio.github.io/distill.\n\n\n\n",
    "preview": {},
    "last_modified": "2021-08-13T08:54:23-07:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-08-10-hi/",
    "title": "hi",
    "description": "A short description of the post.",
    "author": [
      {
        "name": "Allie Cole",
        "url": {}
      }
    ],
    "date": "2021-08-10",
    "categories": [],
    "contents": "\nDistill is a publication format for scientific and technical writing, native to the web.\nLearn more about using Distill at https://rstudio.github.io/distill.\n\n\n\n",
    "preview": {},
    "last_modified": "2021-08-11T11:18:57-07:00",
    "input_file": {}
  }
]
